// Action                                      | symbol | Param1                | Param2                  | Param3        | Param4                | Param5
// Read EMI                                    | _EMI   | R(0)                  | Begin offset            | End offset
// Read EMI to temp register                   | _EMI   | R(0)                  | offset                  | Temp Reg ID($)
// Read EMI to temp register                   | _EMI   | R(0)                  | offset                  | mask          | Temp Reg ID ($)
// Read CR                                     | _REG   | R(0)                  | Pre-define base-addr ID | offset        | times                 | delay time(ms)
// Read CR                                     | _REG   | R(0)                  | AP Physical address     | offset        | times                 | delay time(ms)
// Read CR to temp register                    | _REG   | R(0)                  | Pre-define base-addr ID | offset        | Temp Reg ID($)
// Read CR to temp register                    | _REG   | R(0)                  | AP Physical address     | offset        | Temp Reg ID($)
// Read CR to temp register                    | _REG   | R(0)                  | Pre-define base-addr ID | offset        | mask                  | Temp Reg ID($)
// Read CR to temp register                    | _REG   | R(0)                  | AP Physical address     | offset        | mask                  | Temp Reg ID($)
// Write CR                                    | _REG   | W(1)                  | Pre-define base-addr ID | offset        | value
// Write CR                                    | _REG   | W(1)                  | AP Physical address     | offset        | value
// Write CR some bit                           | _REG   | W(1)                  | Pre-define base-addr ID | offset        | value                 | mask
// Write CR some bit                           | _REG   | W(1)                  | AP Physical address     | offset        | value                 | mask
// Read GPIO                                   | GPIO   | R(0)                  | Pin number
// Disable reset                               | DRST
// Chip reset                                  | _RST
// Keep Wakeup Connsys                         | WAK+
// Cancel keep Wakeup                          | WAK-
// Show message                                | SHOW   | String(No space)
// Sleep                                       | _SLP   | time(ms)
// Check condition to result temp register     | COND   | Result Temp Reg ID($) | Left Temp Reg ID($)     | Operator      | Right Temp Reg ID($)
// Check condition to result temp register     | COND   | Result Temp Reg ID($) | Left Temp Reg ID($)     | Operator      | Value(Dec or Hex)
// Save value to temp register                 | _VAL   | Temp Reg ID($)        | Value
//
// Condition Action                            | symbol | Param1                   | Param2 | Param3                  | Param4         | Param5          | Param6
// Read EMI with Condition                     | CEMI   | Condition Temp Reg ID($) | R(0)   | Begin offset            | End offset
// Read EMI to temp register with Condition    | CEMI   | Condition Temp Reg ID($) | R(0)   | Begin offset            | Temp Reg ID($)
// Read EMI to temp register with Condition    | CEMI   | Condition Temp Reg ID($) | R(0)   | Begin offset            | mask           | Temp Reg ID($)
// Read CR with Condition                      | CREG   | Condition Temp Reg ID($) | R(0)   | Pre-define base-addr ID | offset         | times           | delay time(ms)
// Read CR with Condition                      | CREG   | Condition Temp Reg ID($) | R(0)   | AP Physical address     | offset         | times           | delay time(ms)
// Read CR to temp register with Condition     | CREG   | Condition Temp Reg ID($) | R(0)   | Pre-define base-addr ID | offset         | Temp Reg ID($)
// Read CR to temp register with Condition     | CREG   | Condition Temp Reg ID($) | R(0)   | AP Physical address     | offset         | Temp Reg ID($)
// Read CR to temp register with Condition     | CREG   | Condition Temp Reg ID($) | R(0)   | Pre-define base-addr ID | offset         | mask            | Temp Reg ID($)
// Read CR to temp register with Condition     | CREG   | Condition Temp Reg ID($) | R(0)   | AP Physical address     | offset         | mask            | Temp Reg ID($)
// Write CR with Condition                     | CREG   | Condition Temp Reg ID($) | W(1)   | Pre-define base-addr ID | offset         | value
// Write CR with Condition                     | CREG   | Condition Temp Reg ID($) | W(1)   | AP Physical address     | offset         | value
// Write CR some bit with Condition            | CREG   | Condition Temp Reg ID($) | W(1)   | Pre-define base-addr ID | offset         | value           | mask
// Write CR some bit with Condition            | CREG   | Condition Temp Reg ID($) | W(1)   | AP Physical address     | offset         | value           | mask
//
// Periodic dump: Add PD in trigger point
// [TP x] Trigger point
// [PD+] ms
//  [AT] xxxx
//  [AT] xxxx
// [PD-]
//
// Temp Reg ID: ($0 ~ $9)
//
// Operator: ==, !=, >, >=, <, <=, &&, ||
//
// Pre-define base-addr ID: (You can find address and size in DTS file)
// #1 => CONN_MCU_CONFIG_BASE
// #2 => AP_RGU_BASE
// #3 => TOPCKGEN_BASE
// #4 => SPM_BASE
// #5 => CONN_HIF_ON_BASE
// #6 => CONN_TOP_MISC_OFF_BASE
// #7 => CONN_MCU_CFG_ON_BASE
// #8 => CONN_MCU_CIRQ_BASE

[TP 1] When Command timeout
    // Host_CSR
    [AT] _REG 0 #5 0x100 1 0
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 0 #5 0x108 1 0
    [AT] _REG 0 #5 0x10c 1 0
    [AT] _REG 0 #5 0x110 1 0
    [AT] _REG 0 #5 0x114 1 0
    [AT] _REG 0 #5 0x118 1 0
    [AT] _REG 0 #5 0x11c 1 0
    [AT] _REG 0 #5 0x120 1 0
    [AT] _REG 0 #5 0x124 1 0
    [AT] _REG 0 #5 0x128 1 0
    [AT] _REG 0 #5 0x12c 1 0
    [AT] _REG 0 #5 0x130 1 0

    // PC log from Host_CSR
    [AT] _REG 1 #5 0x14 0xff000380
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000382
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000384
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000386
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000388
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00038a
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00038c
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00038e
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000390
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000392
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000394
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000396
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000398
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00039a
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00039c
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00039e
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003a0
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003a2
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003a4
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003a6
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003a8
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003aa
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003ac
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003ae
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003b0
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003b2
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003b4
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003b6
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003b8
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003ba
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003bc
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003be
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003c0
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003c2
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003c4
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003c6
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003c8
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003ca
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003cc
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003ce
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003d0
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003fe

    // Bus timeout debug
    [AT] _REG 0 0x10000000 0x0000 1 0
    [AT] _REG 0 0x10000000 0x0200 1 0
    [AT] _REG 0 0x10000000 0x6408 1 0
    [AT] _REG 0 0x10000000 0x640c 1 0
    [AT] _REG 0 0x10000000 0x644c 1 0
    [AT] _REG 0 0x1020e000 0x02c 1 0
    [AT] _REG 0 0x1020e000 0x180 1 0
    [AT] _REG 0 0x1020e000 0x184 1 0
    [AT] _REG 0 0x1020e000 0x188 1 0
    [AT] _REG 0 0x1020e000 0x18c 1 0
    [AT] _REG 0 #3 0x220 1 0
    [AT] _REG 0 #3 0x224 1 0
    [AT] _REG 0 #3 0x228 1 0
    [AT] _REG 0 #3 0x250 1 0
    [AT] _REG 0 #3 0x254 1 0
    [AT] _REG 0 #3 0x258 1 0

[TP 2] When Firmware trigger assert

[TP 3] Before Chip reset
    // Host_CSR
    [AT] _REG 0 #5 0x100 1 0
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 0 #5 0x108 1 0
    [AT] _REG 0 #5 0x10c 1 0
    [AT] _REG 0 #5 0x110 1 0
    [AT] _REG 0 #5 0x114 1 0
    [AT] _REG 0 #5 0x118 1 0
    [AT] _REG 0 #5 0x11c 1 0
    [AT] _REG 0 #5 0x120 1 0
    [AT] _REG 0 #5 0x124 1 0
    [AT] _REG 0 #5 0x128 1 0
    [AT] _REG 0 #5 0x12c 1 0
    [AT] _REG 0 #5 0x130 1 0

    // PC log from Host_CSR
    [AT] _REG 1 #5 0x14 0xff000380
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000382
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000384
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000386
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000388
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00038a
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00038c
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00038e
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000390
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000392
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000394
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000396
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff000398
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00039a
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00039c
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff00039e
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003a0
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003a2
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003a4
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003a6
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003a8
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003aa
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003ac
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003ae
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003b0
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003b2
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003b4
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003b6
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003b8
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003ba
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003bc
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003be
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003c0
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003c2
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003c4
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003c6
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003c8
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003ca
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003cc
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003ce
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003d0
    [AT] _REG 0 #5 0x104 1 0
    [AT] _REG 1 #5 0x14 0xff0003fe

    // Bus timeout debug
    [AT] _REG 0 0x10000000 0x0000 1 0
    [AT] _REG 0 0x10000000 0x0200 1 0
    [AT] _REG 0 0x10000000 0x6408 1 0
    [AT] _REG 0 0x10000000 0x640c 1 0
    [AT] _REG 0 0x10000000 0x644c 1 0
    [AT] _REG 0 0x1020e000 0x02c 1 0
    [AT] _REG 0 0x1020e000 0x180 1 0
    [AT] _REG 0 0x1020e000 0x184 1 0
    [AT] _REG 0 0x1020e000 0x188 1 0
    [AT] _REG 0 0x1020e000 0x18c 1 0
    [AT] _REG 0 #3 0x220 1 0
    [AT] _REG 0 #3 0x224 1 0
    [AT] _REG 0 #3 0x228 1 0
    [AT] _REG 0 #3 0x250 1 0
    [AT] _REG 0 #3 0x254 1 0
    [AT] _REG 0 #3 0x258 1 0

[TP 4] After Chip reset

[TP 5] Before Wifi function on

[TP 6] Before Wifi function off

[TP 7] Before BT function on

[TP 8] Before BT function off

[TP 9] Before FM function on

[TP 10] Before FM function off

[TP 11] Before GPS function on

[TP 12] Before GPS function off

[TP 13] Before read consys thermal

[TP 14] Power on sequence(0): Start power on

[TP 15] Power on sequence(1): Before can get connsys id

[TP 16] Power on sequence(2): Before send download patch

[TP 17] Power on sequence(3): Before connsys reset (donwload patch)

[TP 18] Power on sequence(4): Before set wifi and lte coex

[TP 19] Power on sequence(5): Before set BT and Wifi calibration

[TP 20] Power on sequence(6): End power on

[TP 21] Before WMT power off

[TP 22] When AP suspend

[TP 23] When AP resume
